// Generated by https://quicktype.io

export interface SearchResult {
    full_path:             string;
    full_paths:            FullPaths;
    id:                    number;
    jw_entity_id:          string;
    object_type:           ObjectType;
    offers?:               Offer[];
    original_release_year: number;
    poster:                string;
    poster_blur_hash:      string;
    scoring:               Scoring[];
    title:                 string;
}

export interface FullPaths {
    MOVIE_DETAIL_OVERVIEW?: string;
    SHOW_DETAIL_OVERVIEW?:  string;
}

export enum ObjectType {
    Movie = "movie",
    Show = "show",
}

export interface Offer {
    country:                       Country;
    currency?:                     Currency;
    jw_entity_id:                  string;
    monetization_type:             MonetizationType;
    package_short_name:            string;
    presentation_type:             PresentationType;
    provider_id:                   number;
    retail_price?:                 number;
    urls:                          Urls;
    last_change_date?:             string;
    last_change_date_provider_id?: string;
    last_change_difference?:       number;
    last_change_percent?:          number;
    last_change_retail_price?:     number;
    available_to?:                 string;
    element_count?:                number;
    new_element_count?:            number;
    type?:                         string;
}

export enum Country {
    Br = "BR",
}

export enum Currency {
    Brl = "BRL",
}

export enum MonetizationType {
    Ads = "ads",
    Buy = "buy",
    Flatrate = "flatrate",
    Rent = "rent",
}

export enum PresentationType {
    HD = "hd",
    SD = "sd",
    The4K = "4k",
}

export interface Urls {
    deeplink_rokuos?: string;
    standard_web:     string;
    deeplink_web?:    string;
}

export interface Scoring {
    provider_type: ProviderType;
    value:         number;
}

export enum ProviderType {
    ImdbMultiplied = "imdb:multiplied",
    ImdbPopularity = "imdb:popularity",
    ImdbScore = "imdb:score",
    ImdbVotes = "imdb:votes",
    TmdbID = "tmdb:id",
    TmdbPopularity = "tmdb:popularity",
    TmdbScore = "tmdb:score",
}
